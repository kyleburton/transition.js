
Documentation:
 * point out that the web server has to follow symlinks if you install transition with a symlink...
 * how to control / update settings from your test-suite.js
 * how to change settings (and the frame sizes/percentages) from your test-suite.js
 * Document that 'autoStartSuite=true' in the query string kicks off the suite on load

Reporting:
 * demonstrate how to bind to events so reporting information can be sent to another service

Logging:
 * somehow (stringify the function?) show the contents of the on-enter and the transition predicates in the log?
   do this automatically when you are stepping through a test?
 * to the Log menu, add a 'toggle verbose vs non-verbose' to display full LogEntry details
 * click or over over a log line, to view expanded details: full time/date string, test name & state, the log-level
 * NB: the 'testName' member of the LogEntry is the test that caused the log, not just the name [string]

Log Filtering:
 * search for the name of the test too, not just the log entries themselves
 * multiple words should be treated as an 'AND' between the terms
 * or use a simple syntax for boolean searches
 * filter the log output based on the currently selected test? (how do you unselect the current test?)

Settings:
 * use HTML5 local storage for the settings (thanks Nicholas Canzoneri)

For Events (a real click), recording, etc, look at:
  https://github.com/jupiterjs/syn

Store state in cookie(s):
  Remember settings in a cookie, override defaults
  Remember currently selected test in a cookie so it will be re-selected if the page is reloaded.

Test
  Each should have a pending flag.
Suite
  Failure summary
  Support for re-running only those tests that failed
Settings:
  add pollTimeout 250ms
Navbar:
  hide/show the navbar to save on screen real estate
Log Viewer
  log entries should have lots of details, there should be an interctive menu
    option or setting to toggle between brief and detialed views
  Stop the log window from increasing the viewport - put a max-height on the log window
Logging
  Support colors regardless of level, this will be useful for reporting on test pass/failure
Documentation
  Document 2.x
  Update the gh-pages branch to include both the 1.x and 2.x branches.

External Logging
  Used to be done via a sinatra app, could be done that way again
  
Controls:
  have an alternate view for mobile
  larger buttons, show/hide controls

* Documentation:
    * update docs to describe and show how to use the new frames based test
      runner
* Example: phantom.js driver for in-browser based tests
* Example: phantom.js use of state machine - w/o frames
